{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/entries.js","components/RemoveButton.js","components/Notification.js","App.js","index.js"],"names":["Filter","_ref","filter","handleFilterChange","react_default","a","createElement","value","onChange","PersonForm","addName","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Persons","rows","baseUrl","entries","console","log","axios","get","then","response","data","newObject","post","oldObject","delete","newData","put","concat","RemoveButton","person","removeName","onClick","Notification","message","messageClass","className","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setNewFilter","_useState9","_useState10","notificationMessage","setNotificationMessage","_useState11","_useState12","notificationType","setNotificationType","useEffect","personService","initialPersons","catch","error","notify","setTimeout","window","confirm","name","id","returnedId","Listing","_ref2","number","components_RemoveButton","filteredList","length","toLowerCase","includes","components_Notification","components_Filter","event","target","components_PersonForm","preventDefault","exists","personObject","forEach","returnedPerson","map","entry","components_Persons","key","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5e5b2e44.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({filter, handleFilterChange}) =>(\r\n        <div>\r\n                rajaa näytettäviä: <input value={filter} onChange={handleFilterChange}/>\r\n        </div>\r\n      )\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({addName, newName, newNumber, handleNameChange, handleNumberChange}) => (\r\n  <form onSubmit={addName}>\r\n    <div>\r\n      nimi: <input value={newName} onChange={handleNameChange}/>\r\n    </div>\r\n    <div>\r\n      numero: <input value={newNumber} onChange={handleNumberChange}/>\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">lisää</button>\r\n    </div>\r\n  </form>\r\n)\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({rows}) => \r\n<div>{rows}</div>  \r\n\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n\tconsole.log('getting all entries')\r\n\tconst request = axios.get(baseUrl)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n\tconsole.log('creating new entry')\r\n\tconst request = axios.post(baseUrl, newObject)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nconst remove = oldObject => {\r\n\tconsole.log('removing old entry')\r\n\tconst request = axios.delete(baseUrl +'/'+ oldObject)\r\n\treturn request.then(response => oldObject)\r\n}\r\n\r\nconst modify = (oldObject, newData) => {\r\n\tconsole.log('Modifying old entry', oldObject, newData);\r\n\tconst request = axios.put(`${baseUrl}/${oldObject}`, newData)\r\n\treturn request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, remove, modify}","import React from 'react'\r\n\r\nconst RemoveButton = ({person, removeName}) =>{\r\n\tconsole.log('button', person);\r\n\treturn(\r\n\t\t<button type=\"button\" onClick={()=>removeName({person})}>poista</button>\r\n\t)\r\n}\r\n\r\nexport default RemoveButton","import React from 'react'\r\n\r\nconst Notification = ({message, messageClass}) => {\r\n\tif (message === null) {\r\n\t\treturn null\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={messageClass}>\r\n\t\t\t{message}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport personService from './services/entries'\r\nimport RemoveButton from './components/RemoveButton'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [ persons, setPersons] = useState([]) \r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filter, setNewFilter ] = useState('')\r\n  const [ notificationMessage, setNotificationMessage] = useState(null)\r\n  const [ notificationType, setNotificationType] = useState(null)\r\n\r\n  useEffect(()=> {\r\n    console.log('Effect: getting initial data')\r\n\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons)\r\n      })\r\n      .catch(error => notify('error', `Virhe: ${error}`))\r\n  }, [])\r\n\r\n  const handleNameChange = (event) =>{\r\n    //console.log(event.target.value)\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    //console.log(event.target.value)\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    //console.log(event.target.value)\r\n    setNewFilter(event.target.value)\r\n  }\r\n\r\n  const notify = (type, message) => {\r\n    console.log(type, ': ', message);\r\n    setNotificationType(type)\r\n    setNotificationMessage(message)\r\n    setTimeout(()=> {\r\n       setNotificationMessage(null)\r\n    }, 5000)\r\n  }\r\n\r\n  const addName = (event) => {\r\n    event.preventDefault()\r\n    console.log('Add button pressed, name to be added:', newName)\r\n    let exists = false\r\n    const personObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n    }\r\n\r\n    persons.forEach((person) => {\r\n      console.log('tarkistetaan', person.name)\r\n      if (newName === person.name){\r\n        if(window.confirm(`${newName} on jo luettelossa, korvataanko vanha numero uudella?`)){\r\n          const newData = personObject\r\n          personService\r\n            .modify(person.id, newData)\r\n            .then(returnedPerson =>{\r\n              setPersons(persons.map(entry =>{\r\n                if(entry.id === returnedPerson.id){\r\n                  notify(`Muokattiin, ${returnedPerson.name}`)\r\n                  return(returnedPerson)\r\n                }\r\n                else{\r\n                  return(entry)\r\n                }\r\n              }))\r\n            })\r\n            .catch(error => notify('error', `Virhe: henkilön ${person.name} muokkaaminen epäonnistui`))\r\n        }\r\n        exists = true\r\n      }\r\n    } )\r\n    \r\n    if(!exists) {\r\n      \r\n      console.log('Adding to database: ',personObject)\r\n      personService\r\n        .create(personObject)\r\n        .then(returnedPerson =>{\r\n          setPersons(persons.concat(returnedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n          notify(\"notification\", `Lisättiin ${returnedPerson.name}`)\r\n        })\r\n        .catch(error => notify('error', `Virhe: henkilön ${personObject.name} lisääminen epäonnistui`))\r\n      }\r\n    }\r\n\r\n  const removeName = ({person})=>{\r\n    if (window.confirm(`Poistetaanko ${person.name}?`)){\r\n      console.log(\"Removing from database: \", person.id)\r\n      personService\r\n        .remove(person.id)\r\n        .then(returnedId =>{\r\n          setPersons(persons.filter(person => person.id !== returnedId))\r\n          notify(\"notification\", `poistettiin ${person.name}`)\r\n        })\r\n        .catch(error => notify('error', `Virhe: Henkilö ${person.name} oli jo poistettu.`))\r\n    }\r\n    \r\n  }\r\n\r\n  const Listing = ({person}) => <li>{person.name} {person.number} <RemoveButton person={person} removeName={removeName}></RemoveButton></li>\r\n\r\n  const filteredList = filter.length >0 ? persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()) ) : persons\r\n\r\n  const rows = () => filteredList.map(person =>\r\n  <Listing key={person.name} person={person} />) \r\n\r\n  return (\r\n    <div>\r\n      <h2>Puhelinluettelo</h2>\r\n        <Notification message={notificationMessage} messageClass={notificationType}/>\r\n        <Filter filter={filter} handleFilterChange={handleFilterChange}/>\r\n      <h3>Lisää uusi</h3>\r\n        <PersonForm \r\n          addName={addName} \r\n          newName={newName} \r\n          newNumber={newNumber} \r\n          handleNameChange={handleNameChange}\r\n          handleNumberChange={handleNumberChange}\r\n        />\r\n      <h3>Numerot</h3>\r\n      <Persons rows={rows()}/>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}